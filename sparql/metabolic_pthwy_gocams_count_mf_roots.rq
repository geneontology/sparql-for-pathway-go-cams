PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX dc: <http://purl.org/dc/elements/1.1/>
PREFIX gomodel: <http://model.geneontology.org/>
PREFIX REACTO: <http://purl.obolibrary.org/obo/go/extensions/reacto.owl#>

PREFIX MF: <http://purl.obolibrary.org/obo/GO_0003674>
PREFIX BP: <http://purl.obolibrary.org/obo/GO_0008150>
PREFIX CC: <http://purl.obolibrary.org/obo/GO_0005575>
PREFIX PCC: <http://purl.obolibrary.org/obo/GO_0032991>

PREFIX causally_upstream_of_or_within: <http://purl.obolibrary.org/obo/RO_0002418>
PREFIX causally_upstream_of_or_within_negative_effect: <http://purl.obolibrary.org/obo/RO_0004046>
PREFIX causally_upstream_of_or_within_positive_effect: <http://purl.obolibrary.org/obo/RO_0004047>

PREFIX causally_upstream_of: <http://purl.obolibrary.org/obo/RO_0002411>
PREFIX causally_upstream_of_negative_effect: <http://purl.obolibrary.org/obo/RO_0002305>
PREFIX causally_upstream_of_positive_effect: <http://purl.obolibrary.org/obo/RO_0002304>

PREFIX regulates: <http://purl.obolibrary.org/obo/RO_0002211>
PREFIX negatively_regulates: <http://purl.obolibrary.org/obo/RO_0002212>
PREFIX positively_regulates: <http://purl.obolibrary.org/obo/RO_0002213>

PREFIX directly_regulates: <http://purl.obolibrary.org/obo/RO_0002578>
PREFIX directly_positively_regulates: <http://purl.obolibrary.org/obo/RO_0002629>
PREFIX directly_negatively_regulates: <http://purl.obolibrary.org/obo/RO_0002630>

PREFIX directly_activates: <http://purl.obolibrary.org/obo/RO_0002406>
PREFIX indirectly_activates: <http://purl.obolibrary.org/obo/RO_0002407>

PREFIX directly_inhibits: <http://purl.obolibrary.org/obo/RO_0002408>
PREFIX indirectly_inhibits: <http://purl.obolibrary.org/obo/RO_0002409>

PREFIX transitively_provides_input_for: <http://purl.obolibrary.org/obo/RO_0002414>
PREFIX immediately_causally_upstream_of: <http://purl.obolibrary.org/obo/RO_0002412>
PREFIX directly_provides_input_for: <http://purl.obolibrary.org/obo/RO_0002413>

PREFIX has_input: <http://purl.obolibrary.org/obo/RO_0002233>
PREFIX has_output: <http://purl.obolibrary.org/obo/RO_0002234>
PREFIX enabled_by: <http://purl.obolibrary.org/obo/RO_0002333>

SELECT ?gocam (STR(?title) as ?title) (STR(?root_mf_count_int) AS ?root_mf_count) (STR(?non_root_mf_count_int) AS ?non_root_mf_count) ?controllers ?taxons ?taxon_labels ?modelstate
WHERE 
{
  {
    SELECT ?gocam
    WHERE {
      ?gocam gomodel:graphType gomodel:noctuaCam .
      GRAPH ?gocam {
        ?ind1 has_output: ?chem_ind1 .
        ?ind2 has_input: ?chem_ind2 .
        ?chem_ind1 a ?chem_type .
        ?chem_ind2 a ?chem_type .
        FILTER(?chem_type != owl:NamedIndividual) .
      }
      FILTER ( EXISTS { ?ind1 a MF: } || EXISTS { ?ind1 a REACTO:molecular_event } )
      FILTER ( EXISTS { ?ind2 a MF: } || EXISTS { ?ind2 a REACTO:molecular_event } )
    }
  }
  {
    SELECT ?gocam ?title ?modelstate (GROUP_CONCAT(DISTINCT ?taxon; separator=",") as ?taxons) (GROUP_CONCAT(distinct ?taxon_label;separator=",") as ?taxon_labels) 
    WHERE {
      ?gocam <http://geneontology.org/lego/modelstate> ?modelstate .
      ?gocam dc:title ?title .
      ?gocam <https://w3id.org/biolink/vocab/in_taxon> ?taxon .
      ?taxon rdfs:label ?taxon_label .
    }
    GROUP BY ?gocam ?title ?modelstate
  }
  {
    SELECT ?gocam (GROUP_CONCAT(DISTINCT ?contr_type1; separator=",") as ?controllers)
    WHERE {
      ?gocam gomodel:graphType gomodel:noctuaCam .
      GRAPH ?gocam {
        ?ind enabled_by: ?contr1 .
        ?contr1 a ?contr_type1 .
        FILTER(?contr_type1 != owl:NamedIndividual) .
      }
    }
    GROUP BY ?gocam
  }
  {
    SELECT ?gocam (STR(COUNT(DISTINCT(?ind_non_root))) as ?non_root_mf_count_int)
    WHERE {
      ?gocam gomodel:graphType gomodel:noctuaCam .
      ?ind_non_root a MF: .
      GRAPH ?gocam {
        ?ind_non_root a owl:NamedIndividual .
        ?ind_non_root a ?mf_non_root_type .
        FILTER(?mf_non_root_type != owl:NamedIndividual)
        FILTER(?mf_non_root_type != MF:)
      }
    }
    GROUP BY ?gocam
  }
  {
    SELECT ?gocam (STR(COUNT(DISTINCT(?ind_root))) as ?root_mf_count_int)
    WHERE {
      ?gocam gomodel:graphType gomodel:noctuaCam .
      GRAPH ?gocam {
        OPTIONAL { 
          ?ind_root a owl:NamedIndividual .
          ?ind_root a MF: 
        } 
      }
    }
    GROUP BY ?gocam
  }
  FILTER(?non_root_mf_count_int > ?root_mf_count_int)
}
